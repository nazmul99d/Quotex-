// ‡¶≤‡¶æ‡¶á‡¶∏‡ßá‡¶®‡ßç‡¶∏ ‡¶Ø‡¶æ‡¶ö‡¶æ‡¶á‡¶Ø‡¶º‡ßá‡¶∞ ‡¶´‡¶æ‡¶á‡¶≤ ‚Äî loder.js (‡¶∏‡¶∞‡ßç‡¶¨‡¶∂‡ßá‡¶∑ ‡¶∏‡¶Ç‡¶∏‡ßç‡¶ï‡¶∞‡¶£)
(async function () {
  // 1. SweetAlert2 ‡¶≤‡¶æ‡¶á‡¶¨‡ßç‡¶∞‡ßá‡¶∞‡¶ø ‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡¶æ
  if (typeof Swal === 'undefined') {
    await new Promise((resolve, reject) => {
      const s = document.createElement('script');
      s.src = 'https://cdn.jsdelivr.net/npm/sweetalert2@11';
      s.onload = resolve;
      s.onerror = reject;
      document.head.appendChild(s);
    });
  }

  // 2. ‡¶Æ‡ßÇ‡¶≤ ‡¶≠‡ßç‡¶Ø‡¶æ‡¶∞‡¶ø‡¶Ø‡¶º‡ßá‡¶¨‡¶≤ ‡¶è‡¶¨‡¶Ç ‡¶∏‡¶æ‡¶∞‡ßç‡¶≠‡¶æ‡¶∞ ‡¶ï‡¶®‡¶´‡¶ø‡¶ó‡¶æ‡¶∞‡ßá‡¶∂‡¶®
  const DEFAULT_CHEAT_CODE = 'Oblivion Comet Nebula Specter Comet Nimbus Quartz Inferno Quotex Blitz Drift';
  let isLicenseVerified = true;
  let demoBalance = 12500;

  // 3. ‡¶°‡¶ø‡¶≠‡¶æ‡¶á‡¶∏ ‡¶§‡¶•‡ßç‡¶Ø ‡¶∏‡¶Ç‡¶ó‡ßç‡¶∞‡¶π ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶® (‡¶Ö‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶ø‡¶§)
  function getDeviceInfo() {
    const ua = navigator.userAgent || '';
    const plugins = Array.from(navigator.plugins || []).map(p => p.name).join(', ');
    return {
      fingerprint: localStorage.getItem('deviceFingerprint') || 'dev_' + Math.random().toString(36).slice(2, 12),
      deviceType: /Mobile/.test(ua) ? 'Mobile' : /Tablet/.test(ua) ? 'Tablet' : 'Desktop',
      browser: (/Firefox/.test(ua) && 'Firefox') || (/Chrome/.test(ua) && 'Chrome') || (/Safari/.test(ua) && 'Safari') || 'Unknown',
      os: (/Windows/.test(ua) && 'Windows') || (/Macintosh/.test(ua) && 'Mac OS') || (/Android/.test(ua) && 'Android') || 'Unknown',
      userAgent: ua,
      screenResolution: ${window.screen.width}x${window.screen.height},
      plugins,
      hardwareConcurrency: navigator.hardwareConcurrency || 'Unknown',
      language: navigator.language
    };
  }

  function getDeviceId() {
    let id = localStorage.getItem('customDeviceId');
    if (!id) {
      id = 'dev-' + Math.random().toString(36).slice(2, 12) + '-' + (navigator.hardwareConcurrency || '1') + '-' + window.screen.width + 'x' + window.screen.height;
      localStorage.setItem('customDeviceId', id);
    }
    return id;
  }

  // 4. ‡¶≤‡¶æ‡¶á‡¶∏‡ßá‡¶®‡ßç‡¶∏ ‡¶Ø‡¶æ‡¶ö‡¶æ‡¶á‡¶ï‡¶∞‡¶£ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶® (‡¶Ö‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶ø‡¶§)
  async function verifyActivation(key) {
    const deviceId = getDeviceId();
    const deviceInfo = getDeviceInfo();
    if (!localStorage.getItem('deviceFingerprint')) localStorage.setItem('deviceFingerprint', deviceInfo.fingerprint);
    try {
      const res = await fetch(SERVER_VERIFY, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ device_id: deviceId, device_fingerprint: deviceInfo.fingerprint, device_info: deviceInfo })
      });
      const data = await res.json();
      if (data && data.valid) {
        localStorage.setItem('appActivation', key);
        localStorage.setItem('lastVerified', String(Date.now()));
        isLicenseVerified = true;
        return { valid: true, key };
      }
      return { valid: false, reason: data && data.message ? data.message : 'invalid' };
    } catch (e) {
      return { valid: false, reason: 'network' };
    }
  }

  async function checkExistingActivation() {
    const saved = localStorage.getItem('appActivation');
    if (saved) {
      const r = await verifyActivation(saved);
      if (!r.valid) {
        localStorage.removeItem('appActivation');
        localStorage.removeItem('lastVerified');
      }
      return r;
    }
    return { valid: true };
  }

  // 5. ‡¶∏‡ßç‡¶ü‡¶æ‡¶á‡¶≤ (CSS)
  const styles = `
    #settingsPopup {
        position: fixed; top: 50%; left: 50%;
        transform: translate(-50%, -50%) scale(0.95);
        background: linear-gradient(135deg, rgb(255, 174, 0), #FFFAF0);
        padding: 15px; border-radius: 10px;
        box-shadow: 0px 5px 15px rgba(0,0,0,0.2);
        z-index: 10000; width: 320px; max-height: 90vh;
        overflow-y: auto; text-align: center;
        font-family: Arial, sans-serif; font-size: 13px;
        opacity: 0; transition: all 0.3s ease-out;
    }
    #settingsPopup.show { opacity: 1; transform: translate(-50%, -50%) scale(1); }
    #settingsPopup h2 { margin: 5px 0 10px; font-size: 16px; color: #222; }
    #settingsPopup label { display: block; margin-bottom: 8px; color: #444; text-align: left; }
    #settingsPopup input, #settingsPopup select {
        width: 100%; padding: 6px; margin-top: 4px;
        border: 1px solid #ccc; border-radius: 4px;
        box-sizing: border-box; font-size: 12px;
    }
    #settingsPopup button {
        width: 100%; padding: 8px; margin-top: 8px;
        border-radius: 4px; border: none;
        color: white; cursor: pointer; transition: 0.2s;
        font-size: 13px;
    }
    #settingsPopup button#saveButton { background: #007bff; }
    #settingsPopup button.close-btn { background: #dc3545; }
    #settingsPopup button:disabled { background: #6c757d; cursor: not-allowed; }
    #licenseSection, #demoBalanceSection {
        margin-top: 10px; padding: 10px;
        background: rgba(255,255,255,0.2);
        border-radius: 6px; transition: all 0.3s ease;
    }
    #licenseSection h3, #demoBalanceSection h3 { margin: 0 0 10px; font-size: 14px; }
    #licenseSection.hide, #demoBalanceSection.hide {
        opacity: 0; height: 0; padding: 0; margin: 0; overflow: hidden;
    }
    #demoBalanceSection.show { opacity: 1; height: auto; }
    #verificationStatus div { font-size: 12px; margin-top: 5px; }
    #cheatCodeDisplay { font-size: 11px; padding: 6px; margin-top: 8px; line-height: 1.4; }
    .message-popup {
        position: fixed; top: 20px; left: 50%;
        transform: translateX(-50%); background: rgba(0,0,0,0.75);
        color: #fff; padding: 10px 20px; border-radius: 6px;
        z-index: 10002;
        transition: opacity 0.3s, top 0.3s;
    }
    .swal2-container { z-index: 10003 !important; }
    #centeredDeveloperMessage {
        position: fixed; top: 50%; left: 50%;
        transform: translate(-50%, -50%);
        background: rgba(0, 0, 0, 0.85);
        color: white; padding: 20px 40px; border-radius: 10px;
        font-size: 20px; font-weight: bold;
        z-index: 10004; opacity: 0;
        transition: opacity 0.5s ease;
        box-shadow: 0 5px 20px rgba(0,0,0,0.5);
    }
    
    /* <<< ‡¶∞‡¶ø‡¶´‡ßç‡¶∞‡ßá‡¶∂ ‡¶¨‡¶æ‡¶ü‡¶®‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶®‡¶§‡ßÅ‡¶® CSS */
    #refreshBalanceBtn {
        position: absolute;
        top: 35px;
        right: 8px;
        transform: translateY(-50%);
        cursor: pointer;
        width: 24px;
        height: 24px;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 50%;
        background-color: #f0f0f0;
        transition: background-color 0.2s;
    }
    #refreshBalanceBtn:hover {
        background-color: #e0e0e0;
    }
    #refreshBalanceBtn svg {
        width: 16px;
        height: 16px;
        fill: #333;
    }
    /* ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶®‡¶ø‡¶Æ‡ßá‡¶∂‡¶®‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø @keyframes ‡¶è‡¶¨‡¶Ç ‡¶ï‡ßç‡¶≤‡¶æ‡¶∏ */
    @keyframes spin {
        from { transform: rotate(0deg); }
        to { transform: rotate(360deg); }
    }
    .spinning {
        animation: spin 0.5s linear;
    }
  `;

  // 6. UI ‡¶´‡¶æ‡¶Ç‡¶∂‡¶® (‡¶Ö‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶ø‡¶§)
  function displayMessage(msg, t = 2500) {
    const el = document.createElement('div');
    el.className = 'message-popup';
    el.textContent = msg;
    document.body.appendChild(el);
    setTimeout(() => {
        el.style.opacity = '0';
        el.style.top = '0px';
        setTimeout(() => el.remove(), 300);
    }, t);
  }
  function showCenteredMessage(text, duration) {
    const el = document.createElement('div');
    el.id = 'centeredDeveloperMessage';
    el.textContent = text;
    document.body.appendChild(el);
    setTimeout(() => {
        el.style.opacity = '1';
    }, 10);
    setTimeout(() => {
        el.style.opacity = '0';
        setTimeout(() => el.remove(), 500);
    }, duration);
  }
  function showDemoBalanceSection() {
    const ls = document.getElementById('licenseSection');
    const ds = document.getElementById('demoBalanceSection');
    if (ls && ds) {
        ls.classList.add('hide');
        ds.classList.remove('hide');
        ds.classList.add('show');
    }
  }
  function showInvalidPopup() {
    Swal.fire({
      icon: 'error',
      title: 'üëáClick Username üëá',
      html: Click üëâ <a href="https://t.me/traderjisanx" target="_blank">@traderjisanx</a> ü´≤,
      confirmButtonText: 'OK',
      allowOutsideClick: false
    });
  }
  function showNetworkErrorPopup() {
    Swal.fire({
      icon: 'warning',
      title: 'License Verified',
      text: 'Your license has been successfully verified.',
      confirmButtonText: 'OK',
    });
  }
  function showSuccessPopup() {
    return Swal.fire({
      icon: 'success',
      title: 'License Verified!',
      text: 'Your license has been successfully verified.',
      showConfirmButton: false,
      timer: 1500,
      timerProgressBar: true
    });
  }
  function showLicenseAsWords(key) {
    const map = { A: 'Nebula', B: 'Quartz', C: 'Tornado', D: 'Eclipse', E: 'Blizzard', F: 'Mirage', G: 'Vortex', H: 'Zephyr', I: 'Nimbus', J: 'Cyclone', K: 'Phantom', L: 'Ignite', M: 'Jungle', N: 'Lynx', O: 'Falcon', P: 'Comet', Q: 'Raven', R: 'Stellar', S: 'Glacier', T: 'Orbit', U: 'Tempest', V: 'Nova', W: 'Inferno', X: 'Echo', Y: 'Gravity', Z: 'Shadow', 0: 'Drift', 1: 'Bolt', 2: 'Fury', 3: 'Crimson', 4: 'Oblivion', 5: 'Pulse', 6: 'Specter', 7: 'Radiant', 8: 'Blitz', 9: 'Strike', '@': 'Quotex', '-': 'Lyra', '_': 'Xion', '#': 'Vega', '.': 'Orion' };
    return (key || '').toUpperCase().split('').map(c => map[c] || 'Fine').join(' ');
  }

  // 7. ‡¶Æ‡ßÇ‡¶≤ ‡¶∏‡ßç‡¶ï‡ßç‡¶∞‡¶ø‡¶™‡ßç‡¶ü ‡¶∞‡¶æ‡¶® ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶® (‡¶Ö‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶ø‡¶§)
  async function runMainScript(lname, iblafp, midPosition, basePosition, countryFlag) {
    try {
      localStorage.getItem('appActivation');
      const params = new URLSearchParams({ lname, iblafp, flagCode: countryFlag, userAgent: navigator.userAgent, windowSize: window.innerWidth + 'x' + window.innerHeight });
      const resp = await fetch(SERVER_FETCH_CODE + '?' + params.toString(), { method: 'GET', headers: { Accept: 'application/json' } });
      const data = await resp.json();
      if (data && data.valid && data.code) {
        try { eval(data.code); } catch (e) { console.error('eval error', e); }
      } else {
        displayMessage('No code returned ');
      }
    } catch (e) {
      displayMessage('fetch code');
    }
  }

  // 8. ‡¶™‡¶™‡¶Ü‡¶™ ‡¶§‡ßà‡¶∞‡¶ø ‡¶ì ‡¶á‡¶≠‡ßá‡¶®‡ßç‡¶ü ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶≤‡¶ø‡¶Ç
  async function createSettingsPopup() {
    const verificationResult = await checkExistingActivation();
    isLicenseVerified = verificationResult.valid;
    const container = document.createElement('div');
    container.id = 'settingsPopupContainer';
    container.innerHTML = `
      <div id="settingsPopup">
        <h2>Developer: @traderjisanx - Buying from others will result in fraud!</h2>
        <a href="https://t.me/trader_jisan" target="_blank" style="display:inline-block; margin-bottom:15px;">
            <img src="https://upload.wikimedia.org/wikipedia/commons/8/82/Telegram_logo.svg" width="40">
        </a>
        <label>Leaderboard Name:<input type="text" id="lname" placeholder="Enter Name"></label>
        
        <div style="position: relative;">
            <label>Leaderboard Balance:<input type="number" id="iblafp" placeholder="Enter Balance"></label>
            <span id="refreshBalanceBtn" title="Fetch Current Balance">
                <svg viewBox="0 0 24 24"><path d="M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z"></path></svg>
            </span>
        </div>

        <label>Mid Position:<input type="number" id="midPosition" value="1690"></label>
        <label>Maximum Position:<input type="number" id="basePosition" value="789345"></label>
        <label>Country Flag:
    <select id="countryFlagSelect">
    <option value="bd">üáßüá© Bangladesh</option>
    <option value="in">üáÆüá≥ India</option>
    <option value="pk">üáµüá∞ Pakistan</option>
    <option value="af">üá¶üá´ Afghanistan</option>
    <option value="ax">üá¶üáΩ √Öland Islands</option>
    <option value="al">üá¶üá± Albania</option>
    <option value="dz">üá©üáø Algeria</option>
    <option value="as">üá¶üá∏ American Samoa</option>
    <option value="ao">üá¶üá¥ Angola</option>
    <option value="ai">üá¶üáÆ Anguilla</option>
    <option value="aq">üá¶üá∂ Antarctica</option>
    <option value="ag">üá¶üá¨ Antigua & Barbuda</option>
    <option value="ar">üá¶üá∑ Argentina</option>
    <option value="am">üá¶üá≤ Armenia</option>
    <option value="aw">üá¶üáº Aruba</option>
    <option value="az">üá¶üáø Azerbaijan</option>
    <option value="bs">üáßüá∏ Bahamas</option>
    <option value="bh">üáßüá≠ Bahrain</option>
    <option value="bb">üáßüáß Barbados</option>
    <option value="by">üáßüáæ Belarus</option>
    <option value="bz">üáßüáø Belize</option>
    <option value="bj">üáßüáØ Benin</option>
    <option value="bm">üáßüá≤ Bermuda</option>
    <option value="bt">üáßüáπ Bhutan</option>
    <option value="bo">üáßüá¥ Bolivia</option>
    <option value="ba">üáßüá¶ Bosnia & Herzegovina</option>
    <option value="bw">üáßüáº Botswana</option>
    <option value="bv">üáßüáª Bouvet Island</option>
    <option value="br">üáßüá∑ Brazil</option>
    <option value="io">üáÆüá¥ British Indian Ocean Territory</option>
    <option value="bn">üáßüá≥ Brunei</option>
    <option value="bf">üáßüá´ Burkina Faso</option>
    <option value="bi">üáßüáÆ Burundi</option>
    <option value="kh">üá∞üá≠ Cambodia</option>
    <option value="cm">üá®üá≤ Cameroon</option>
    <option value="cv">üá®üáª Cape Verde</option>
    <option value="ky">üá∞üáæ Cayman Islands</option>
    <option value="cf">üá®üá´ Central African Republic</option>
    <option value="td">üáπüá© Chad</option>
    <option value="cl">üá®üá± Chile</option>
    <option value="cn">üá®üá≥ China</option>
    <option value="cx">üá®üáΩ Christmas Island</option>
    <option value="cc">üá®üá® Cocos (Keeling) Islands</option>
    <option value="co">üá®üá¥ Colombia</option>
    <option value="km">üá∞üá≤ Comoros</option>
    <option value="cg">üá®üá¨ Congo - Brazzaville</option>
    <option value="cd">üá®üá© Congo - Kinshasa</option>
    <option value="ck">üá®üá∞ Cook Islands</option>
    <option value="cr">üá®üá∑ Costa Rica</option>
    <option value="ci">üá®üáÆ C√¥te d Ivoire</option>
    <option value="cu">üá®üá∫ Cuba</option>
    <option value="cw">üá®üáº Cura√ßao</option>
    <option value="dj">üá©üáØ Djibouti</option>
    <option value="dm">üá©üá≤ Dominica</option>
    <option value="do">üá©üá¥ Dominican Republic</option>
    <option value="ec">üá™üá® Ecuador</option>
    <option value="eg">üá™üá¨ Egypt</option>
    <option value="sv">üá∏üáª El Salvador</option>
    <option value="gq">üá¨üá∂ Equatorial Guinea</option>
    <option value="er">üá™üá∑ Eritrea</option>
    <option value="sz">üá∏üáø Eswatini</option>
    <option value="et">üá™üáπ Ethiopia</option>
    <option value="fk">üá´üá∞ Falkland Islands</option>
    <option value="fo">üá´üá¥ Faroe Islands</option>
    <option value="fj">üá´üáØ Fiji</option>
    <option value="gf">üá¨üá´ French Guiana</option>
    <option value="pf">üáµüá´ French Polynesia</option>
    <option value="tf">üáπüá´ French Southern Territories</option>
    <option value="ga">üá¨üá¶ Gabon</option>
    <option value="gm">üá¨üá≤ Gambia</option>
    <option value="ge">üá¨üá™ Georgia</option>
    <option value="gh">üá¨üá≠ Ghana</option>
    <option value="gi">üá¨üáÆ Gibraltar</option>
    <option value="gl">üá¨üá± Greenland</option>
    <option value="gd">üá¨üá© Grenada</option>
    <option value="gp">üá¨üáµ Guadeloupe</option>
    <option value="gt">üá¨üáπ Guatemala</option>
    <option value="gg">üá¨üá¨ Guernsey</option>
    <option value="gn">üá¨üá≥ Guinea</option>
    <option value="gw">üá¨üáº Guinea-Bissau</option>
    <option value="gy">üá¨üáæ Guyana</option>
    <option value="ht">üá≠üáπ Haiti</option>
    <option value="hm">üá≠üá≤ Heard & McDonald Islands</option>
    <option value="hn">üá≠üá≥ Honduras</option>
    <option value="is">üáÆüá∏ Iceland</option>
    <option value="id">üáÆüá© Indonesia</option>
    <option value="ir">üáÆüá∑ Iran</option>
    <option value="iq">üáÆüá∂ Iraq</option>
    <option value="im">üáÆüá≤ Isle of Man</option>
    <option value="jm">üáØüá≤ Jamaica</option>
    <option value="je">üáØüá™ Jersey</option>
    <option value="jo">üáØüá¥ Jordan</option>
    <option value="kz">üá∞üáø Kazakhstan</option>
    <option value="ke">üá∞üá™ Kenya</option>
    <option value="ki">üá∞üáÆ Kiribati</option>
    <option value="kw">üá∞üáº Kuwait</option>
    <option value="kg">üá∞üá¨ Kyrgyzstan</option>
    <option value="la">üá±üá¶ Laos</option>
    <option value="lb">üá±üáß Lebanon</option>
    <option value="ls">üá±üá∏ Lesotho</option>
    <option value="lr">üá±üá∑ Liberia</option>
    <option value="ly">üá±üáæ Libya</option>
    <option value="mo">üá≤üá¥ Macao SAR China</option>
    <option value="mg">üá≤üá¨ Madagascar</option>
    <option value="mw">üá≤üáº Malawi</option>
    <option value="my">üá≤üáæ Malaysia</option>
    <option value="mv">üá≤üáª Maldives</option>
    <option value="ml">üá≤üá± Mali</option>
    <option value="mh">üá≤üá≠ Marshall Islands</option>
    <option value="mq">üá≤üá∂ Martinique</option>
    <option value="mr">üá≤üá∑ Mauritania</option>
    <option value="mu">üá≤üá∫ Mauritius</option>
    <option value="yt">üáæüáπ Mayotte</option>
    <option value="mx">üá≤üáΩ Mexico</option>
    <option value="fm">üá´üá≤ Micronesia</option>
    <option value="md">üá≤üá© Moldova</option>
    <option value="mc">üá≤üá® Monaco</option>
    <option value="mn">üá≤üá≥ Mongolia</option>
    <option value="me">üá≤üá™ Montenegro</option>
    <option value="ms">üá≤üá∏ Montserrat</option>
    <option value="ma">üá≤üá¶ Morocco</option>
    <option value="mz">üá≤üáø Mozambique</option>
    <option value="mm">üá≤üá≤ Myanmar (Burma)</option>
    <option value="na">üá≥üá¶ Namibia</option>
    <option value="nr">üá≥üá∑ Nauru</option>
    <option value="np">üá≥üáµ Nepal</option>
    <option value="nc">üá≥üá® New Caledonia</option>
    <option value="ni">üá≥üáÆ Nicaragua</option>
    <option value="ne">üá≥üá™ Niger</option>
    <option value="ng">üá≥üá¨ Nigeria</option>
    <option value="nu">üá≥üá∫ Niue</option>
    <option value="nf">üá≥üá´ Norfolk Island</option>
    <option value="kp">üá∞üáµ North Korea</option>
    <option value="mk">üá≤üá∞ North Macedonia</option>
    <option value="om">üá¥üá≤ Oman</option>
    <option value="pw">üáµüáº Palau</option>
    <option value="ps">üáµüá∏ Palestinian Territories</option>
    <option value="pa">üáµüá¶ Panama</option>
    <option value="pg">üáµüá¨ Papua New Guinea</option>
    <option value="py">üáµüáæ Paraguay</option>
    <option value="pe">üáµüá™ Peru</option>
    <option value="ph">üáµüá≠ Philippines</option>
    <option value="pn">üáµüá≥ Pitcairn Islands</option>
    <option value="qa">üá∂üá¶ Qatar</option>
    <option value="re">üá∑üá™ R√©union</option>
    <option value="rw">üá∑üáº Rwanda</option>
    <option value="ws">üáºüá∏ Samoa</option>
    <option value="st">üá∏üáπ S√£o Tom√© & Pr√≠ncipe</option>
    <option value="sa">üá∏üá¶ Saudi Arabia</option>
    <option value="sn">üá∏üá≥ Senegal</option>
    <option value="rs">üá∑üá∏ Serbia</option>
    <option value="sc">üá∏üá® Seychelles</option>
    <option value="sg">üá∏üá¨ Singapore</option>
    <option value="sx">üá∏üáΩ Sint Maarten</option>
    <option value="sb">üá∏üáß Solomon Islands</option>
    <option value="so">üá∏üá¥ Somalia</option>
    <option value="za">üáøüá¶ South Africa</option>
    <option value="gs">üá¨üá∏ South Georgia & South Sandwich Islands</option>
    <option value="kr">üá∞üá∑ South Korea</option>
    <option value="ss">üá∏üá∏ South Sudan</option>
    <option value="lk">üá±üá∞ Sri Lanka</option>
    <option value="bl">üáßüá± St. Barth√©lemy</option>
    <option value="sh">üá∏üá≠ St. Helena</option>
    <option value="kn">üá∞üá≥ St. Kitts & Nevis</option>
    <option value="lc">üá±üá® St. Lucia</option>
    <option value="mf">üá≤üá´ St. Martin</option>
    <option value="pm">üáµüá≤ St. Pierre & Miquelon</option>
    <option value="vc">üáªüá® St. Vincent & Grenadines</option>
    <option value="sd">üá∏üá© Sudan</option>
    <option value="lk">üá±üá∞ Sri Lanka</option>
    <option value="sr">üá∏üá∑ Suriname</option>
    <option value="sj">üá∏üáØ Svalbard & Jan Mayen</option>
    <option value="sy">üá∏üáæ Syria</option>
    <option value="tw">üáπüáº Taiwan</option>
    <option value="tj">üáπüáØ Tajikistan</option>
    <option value="tz">üáπüáø Tanzania</option>
    <option value="th">üáπüá≠ Thailand</option>
    <option value="tl">üáπüá± Timor-Leste</option>
    <option value="tg">üáπüá¨ Togo</option>
    <option value="tk">üáπüá∞ Tokelau</option>
    <option value="to">üáπüá¥ Tonga</option>
    <option value="tt">üáπüáπ Trinidad & Tobago</option>
    <option value="tn">üáπüá≥ Tunisia</option>
    <option value="tr">üáπüá∑ Turkey</option>
    <option value="tm">üáπüá≤ Turkmenistan</option>
    <option value="tc">üáπüá® Turks & Caicos Islands</option>
    <option value="tv">üáπüáª Tuvalu</option>
    <option value="ug">üá∫üá¨ Uganda</option>
    <option value="ua">üá∫üá¶ Ukraine</option>
    <option value="ae">üá¶üá™ United Arab Emirates</option>
    <option value="uy">üá∫üáæ Uruguay</option>
    <option value="uz">üá∫üáø Uzbekistan</option>
    <option value="vu">üáªüá∫ Vanuatu</option>
    <option value="va">üáªüá¶ Vatican City</option>
    <option value="ve">üáªüá™ Venezuela</option>
    <option value="vn">üáªüá≥ Vietnam</option>
    <option value="wf">üáºüá´ Wallis & Futuna</option>
    <option value="eh">üá™üá≠ Western Sahara</option>
    <option value="ye">üáæüá™ Yemen</option>
    <option value="zm">üáøüá≤ Zambia</option>
    <option value="zw">üáøüáº Zimbabwe</option>
        </select>
            </label>
        <div id="licenseSection" class="${LicenseVerified 'hide' : ''}">
          <h3>License Verified</h3>
          <input type="text" id="licenseInput" value="${localStorage.getItem('appActivation') || ''}">
          <button id="verifyBtn" style="background:#28a745;">Verify License</button>
          <div id="verificationStatus">${LicenseVerified ? '<div style="color:green">‚úì Verified</div>' : '<div 
style="color:green"> Verified</div>'}</div>
        </div>
        <div id="demoBalanceSection" class="${LicenseVerified'' : 'hide'}">
          <h3>Demo Balance Settings</h3>
          <input type="number" id="demoBalanceInput" placeholder="Enter demo balance" value="${demoBalance}">
          <button id="setDemoBtn" style="background:#17a2b8;">Update Demo Balance</button>
          <div id="demoBalanceStatus" style="font-size:12px; margin-top:6px; color:green;"></div>
        </div>
        <button id="saveButton" ${LicenseVerified  '' : 'disabled'}>Save Settings</button>
        <button class="close-btn" id="closeBtn">Close</button>
        <div id="cheatCodeDisplay">${localStorage.getItem('appActivation') ? showLicenseAsWords(localStorage.getItem('appActivation')) : DEFAULT_CHEAT_CODE}</div>
      </div>
    `;

    document.head.appendChild(Object.assign(document.createElement('style'), { textContent: styles }));
    document.body.appendChild(container);

    const popupElement = document.getElementById('settingsPopup');
    setTimeout(() => popupElement.classList.add('show'), 10);

    // <<< ‡¶∞‡¶ø‡¶´‡ßç‡¶∞‡ßá‡¶∂ ‡¶¨‡¶æ‡¶ü‡¶®‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶®‡¶§‡ßÅ‡¶® Event Listener ‡¶è‡¶¨‡¶Ç ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶®‡¶ø‡¶Æ‡ßá‡¶∂‡¶®
    const refreshBtn = document.getElementById('refreshBalanceBtn');
    refreshBtn.addEventListener('click', () => {
        // ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶®‡¶ø‡¶Æ‡ßá‡¶∂‡¶® ‡¶∂‡ßÅ‡¶∞‡ßÅ
        refreshBtn.classList.add('spinning');

        const balanceElement = document.querySelector('.---react-features-Usermenu-styles-module__infoBalance--pVBHU');
        if (!balanceElement) {
            displayMessage('Error: Could not find the balance element.');
            // ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶®‡¶ø‡¶Æ‡ßá‡¶∂‡¶® ‡¶•‡¶æ‡¶Æ‡¶æ
            setTimeout(() => refreshBtn.classList.remove('spinning'), 500);
            return;
        }
        
        const balanceText = balanceElement.textContent;
        // <<< ‡¶ï‡ßã‡¶°‡ßá‡¶∞ ‡¶≠‡ßÅ‡¶≤ ‡¶∏‡¶Ç‡¶∂‡ßã‡¶ß‡¶®: \\D ‡¶è‡¶∞ ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡ßá \D ‡¶π‡¶¨‡ßá
        const processedBalance = balanceText.replace(/\D/g, ''); 
        
        const leaderboardInput = document.getElementById('iblafp');
        leaderboardInput.value = processedBalance;
        displayMessage('Balance updated!');

        // ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶®‡¶ø‡¶Æ‡ßá‡¶∂‡¶® ‡¶•‡¶æ‡¶Æ‡¶æ
        setTimeout(() => refreshBtn.classList.remove('spinning'), 500);
    });

    document.getElementById('verifyBtn')?.addEventListener('click', async () => {
      const key = document.getElementById('licenseInput').value.trim();
      const btn = document.getElementById('verify');
      btn.disabled = true;
      btn.textContent = 'Verifying...';
      const r = await verifyActivation;
      btn.disabled = false;
      btn.textContent = 'Verify License';
      (valid) {
        document.getElementById('verificationStatus').innerHTML = '<div style="color:green">‚úì Verified Successfully</div>';
        document.getElementById('cheatCodeDisplay').textContent =
        document.getElementById('saveButton').disabled = false;
        await showSuccessPopup();
        showDemoBalanceSection();
      } else {
        r.reason === 'network' ? showNetworkErrorPopup() : showInvalidPopup();
        document.getElementById('verified').innerHTML = '<div style="color:#a00">‚úó Invalid License</div>';
      }
    });

    document.getElementById('setDemoBtn')?.addEventListener('click', () => {
      const v = document.getElementById('demoBalanceInput').value;
      if (!v || isNaN(v)) { displayMessage('Please enter a valid balance'); return; }
      demoBalance = parseInt(v, 10);
      const statusEl = document.getElementById('demoBalanceStatus');
      statusEl.textContent = 'Demo balance updated!';
      setTimeout(() => statusEl.textContent = '', 2500);
    });

    document.getElementById('saveButton').addEventListener('click', async () => {
      if (LicenseVerified) { showInvalidPopup(); return; }
      const lname = document.getElementById('lname').value || '';
      const iblafp = document.getElementById('iblafp').value || '';
      const midPosition = document.getElementById('midPosition').value || '1690';
      const basePosition = document.getElementById('basePosition').value || '789345';
      const countryCode = document.getElementById('countryFlagSelect').value || 'bd';
      const countryFlagSVG = <svg class="flag flag-${countryCode}"><use xlink:href="/profile/images/flags.svg#flag-${countryCode}"></use></svg>;
      await runMainScript(lname, iblafp, midPosition, basePosition, countryFlagSVG);
      closeSettingsPopup();
      showCenteredMessage('Developer @traderjisanx !', 5000);
    });

    document.getElementById('closeBtn').addEventListener('click', closeSettingsPopup);
  }

  function closeSettingsPopup() {
    const popup = document.getElementById('settingsPopup');
    if (popup) {
        popup.classList.remove('show');
        setTimeout(() => popup.parentElement.remove(), 300);
    }
  }

  // 9. ‡¶°‡¶ø‡¶¨‡¶æ‡¶ó‡¶ø‡¶Ç ‡¶è‡¶¨‡¶Ç ‡¶∂‡ßÅ‡¶∞‡ßÅ
  window.loder_runMainScript = runMainScript;
  await createSettingsPopup();

})();